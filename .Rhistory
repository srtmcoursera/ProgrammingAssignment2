q()
library(swirl)
swirl()
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips <- sample(c(0, 1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
?rpois
rpois(5, 10)
replicate(rpois(5, 10))
replicate(100, rpois(5, 10))
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
q()
library(swirl)
swirl()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXct(Sys.time())
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08_24"
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()>t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
data("cars")
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
?plot
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, main = "My Plot")
?plot
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
data(mtcars)
play()
dim(mtcars)
str(mtcars)
nxt()
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
q()
library(datasets)
data("iris")
data(iris)
?iris
str(iris)
iris$Sepal.Length
iris[which(iris$Species == "virginica")]["Sepal.length"]
which(iris$Species == "virginica")
iris[which(iris$Species == "virginica")]$Sepal.length
iris[which(iris$Species == "virginica"), "Sepal.length"]
iris[which(iris$Species == "virginica"), ]
iris[which(iris$Species == "virginica"), ]$Sepal.length
iris[iris[which(iris$Species == "virginica"), ], "Sepal.length"]
iris[, "Sepal.length"]
iris$Sepal.length
names(iris)
iris[which(iris$Species == "virginica"), ]$Sepal.Length
mean(iris[which(iris$Species == "virginica"), ]$Sepal.Length)
mean(iris[, 1])
mean(iris[, 1]); mean(iris[, 2])
mean(iris[, 1]); mean(iris[, 2]); mean(iris[, 3]); mean(iris[, 4])
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
?apply
data(mtcars)
?mtcars
?with
?tapply
?mtcars
mean(mtcars[which(mtcars$cyl == 4), ]$hp)
mtcars[which(mtcars$cyl == 4), ]
mtcars[which(mtcars$cyl == 4), ]$hp
mean4cyl <- mean(mtcars[which(mtcars$cyl == 4), ]$hp)
mean4cyl
mean8cyl <- mean(mtcars[which(mtcars$cyl == 8), ]$hp)
abs(mean4cyl - mean8cyl)
mean8cyl
debug(ls)
ls()
exit
stop()
?debug
debug(ls)
ls
ls()
str(mtcars)
mtcars$cyl
summary(mtcars)
q()
library(datasets)
data(mtcars)
?mtcars
apply(mtcars, 2, mean)
with(mtcars, tapply(mpg, cyl, mean))
lapply(mtcars, mean)
sapply(mtcars, cyl, mean)
?tapply
with(mtcars, tapply(mpg, cyl, mean))
data(iris)
tapply(iris, Sepal.Length, mean)
tapply(iris, Species, Sepal.Length, mean)
with(iris, tapply(Sepal.Length, Species, mean))
tapply(iris, Sepal.Length, Species, mean)
tapply(iris, iris$Sepal.Length, iris$Species, mean)
tapply(iris, iris$Sepal.Length, mean, iris$Species)
tapply(iris, iris$Sepal.Length, mean)
iris$Sepal.Length
tapply(iris, iris$Species, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
with(iris, tapply(Sepal.Length, Species, mean))
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$mpg, mtcars$cyl, mean))
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
hps <- tapply(mtcars$hp, mtcars$cyl, mean)
abs(hps$4 - hps$8)
abs(hps$"4" - hps$"8")
abs(hps[1] - hps[3])
q()
q()
search()
ls()
remove(ls())
help(remove)
remove(list = ls())
getwd()
setwd("~/Coursera/DataScience--JohnsHopkins/Course2:RProgramming/repos/ProgrammingAssignment2")
getwd()
source("cachematrix.R")
x <- makeCacheMatrix()
x$set(matrix(c(2, 4, 3, 1, 5, 7), nrow = 3, ncol = 2))
x$get()
solve(x$get())
x$set(matrix(c(2, 4, 3, 1, 5, 7, 6, 9, 8), nrow = 3, ncol = 3))
solve(x$get())
x$getInvMatrix()
cacheSolve(x)
source("cachematrix.R")
cacheSolve(x)
x$set(matrix(c(2, 4, 3, 1, 5, 7, 6, 9, 8, 10, 11, 12, 13, 14, 15, 16), nrow = 4, ncol = 4))
cacheSolve(x)
cacheSolve(x)
x$set(matrix(1:400, nrow = 400, ncol = 400))
cacheSolve(x)
x$set(matrix(1:400, nrow = 20, ncol = 20))
cacheSolve(x)
x$set(matrix(rnorm(400, 0, 100), nrow = 20, ncol = 20))
cacheSolve(x)
cacheSolve(x)
x$set(matrix(rnorm(10000, 0, 100), nrow = 20, ncol = 20))
x$set(matrix(rnorm(10000, 0, 100), nrow = 100, ncol = 100))
cacheSolve(x)
cacheSolve(x)
source("cachematrix.R")
cacheSolve(x)
remove(list = ls())
cacheSolve(x)
source("cachematrix.R")
cacheSolve(x)
x$set(matrix(rnorm(10000, 0, 100), nrow = 100, ncol = 100))
x <- makeCacheMatrix()
x$set(matrix(rnorm(10000, 0, 100), nrow = 100, ncol = 100))
cacheSolve(x)
cacheSolve(x)
x$set(matrix(rnorm(400, 0, 100), nrow = 20, ncol = 20))
cacheSolve(x)
cacheSolve(x)
x$set(matrix(rnorm(400, 0, 100), nrow = 20, ncol = 20))
cacheSolve(x)
x$set(matrix(rnorm(900, 0, 100), nrow = 30, ncol = 30))
dim(x$get())
cacheSolve(x)
cacheSolve(x)
